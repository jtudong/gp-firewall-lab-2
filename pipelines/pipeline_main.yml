trigger:
  branches:
    include:
      - dev
      #- master
  paths:
    exclude:
      - "pipelines/*.yml"
      - docs/README.md
      - "config/*"
      - "license/*"
      - "*.azcli"

parameters:
  - name: azureServicePrincipal
    displayName: Azure Service Principal
    type: string
    default: gp-firewall-lab-2
###  moved to variable group 'firewall-vars-1'
#  - name: subnetPrefix
#    displayName: Subnet Prefix
#    type: string
#    default: fwlab
#  - name: environment
#    displayName: Environment
#    default: sandbox
#    type: string
#    values:
#      - prod
#      - dev
#      - sandbox
#  - name: location
#    displayName: Azure Region
#    type: string
#    default: westus3
#    values:
#      - westus3
#      - westus2
#      - westus
#  - name: deployfirewall
#    displayName: Deploy Firewall toggle
#    type: string
#    default: true
#    values:
#      - true
#      - false

variables:
- group: firewall-vars-1

stages:
- stage: prerequisites
  jobs:
    - job: createResourceGroup
      steps:
        - task: AzureCLI@2
          inputs:
            connectedServiceNameARM: ${{ parameters.azureServicePrincipal }}
            scriptType: bash
            scriptLocation: inlineScript
            inlineScript:  az group create -l $(location) -n sfc-$(subnetPrefix)-$(environment)-rg --tags Application=network Team=networking Department=it Environment=$(environment)
            failOnStandardError:  true
    - job: acceptTerms
      dependsOn: createResourceGroup
      steps:
      - task: AzureCLI@2
        inputs:
          connectedServiceNameARM: ${{ parameters.azureServicePrincipal }}
          scriptType:  bash
          scriptLocation: inlineScript
          inlineScript:  az vm image terms accept --urn paloaltonetworks:vmseries-flex:byol:10.1.6
          failOnStandardError: true

- stage: createFirewall
  jobs:
    - job: test variables
      steps:
        - bash: |
            echo 'adminPassword  = '$(adminPassword)
            echo 'bootstrapAccessKey = '$(bootstrapAccessKey)
            echo 'deployFirewall ='$(deployFirewall)

#    - job: deployTemplate
#      steps:
#        - bash: echo 'Deploying the firewall'
#        - task: AzureResourceManagerTemplateDeployment@3
#          inputs:
#            deploymentScope: 'Resource Group'
#            azureResourceManagerConnection: ${{ parameters.azureServicePrincipal }}
#            action: 'Create Or Update Resource Group'
#            resourceGroupName: sfc-$(subnetPrefix)-$(environment)-rg
#            location: $(location)
#            templateLocation: 'Linked artifact'
#            csmFile: firewall.json
#            csmParametersFile: firewall.parameters.json
#            overrideParameters: -adminPassword $(adminPassword) -bootstrapAccessKey $(bootstrapAccessKey) -deployFirewall $(deployFirewall)
#            deploymentMode: 'Incremental'
  